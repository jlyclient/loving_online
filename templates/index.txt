index.html协议定义如下:

注意: 所有的post请求都需要有_xsrf参数:
function get_cookie_by_name(name)
{
    var start = document.cookie.indexOf(name);
    if (start != -1) {
        var res = ""; 
        var end  = document.cookie.indexOf(";", start+1);
        if (end == -1) {
            res = document.cookie.substring(start+name.length+1);
        } else {
            res = document.cookie.substring(start+name.length+1, end);
        }   
        return res;
    }   
    return ""; 
}
直接调用: var xsrf = get_cookie_by_name('_xsrf')即可
ajax的data字段中，一定要有{"_xsrf":xsrf}字段，否则传不上去


1，最新注册男会员url: POST  /new
   parameters:    sex=1&limit=4&page=12&next=0
2，最新注册女会员url: POST  /new
   parameters:    sex=2&limit=4&page=12&next=0
3，寻觅url:           POST  /find
   parameters: null

以上3中的返回数据格式都是一样的，如下所示：
   {
     'code': 0,-1, //0成功, -1失败
     'msg': 'ok',或者 'reason'
     'data': [{'user': {},'pic': {},'statement': {}},...]
   }
其中user数据结构如下:
{
    'id': 用户id,
    'nick_name': 登录名字, 
    'sex': 性别 0=未填 1=男 2=女,
    'age': 年龄,
    'height': 身高,
    'degree' 学历 0=保密 1=高中及以下 2=中专/大专 3=本科 4=研究生 5=博士及博士后
}
pic数据结构如下:
{
    'id': 用户id,
    'count': 还可以上传几张图片, 最多能上传10张 0~9 第0张是头像，1~9是照片
    'arr': [url0, url1, url2, ......url9] url是图片的url,如果第i张url为空,则从它开始及其以后都没有图片了
}
statement数据结构如下:
{
    'id': 用户id,
    'motto': 用户爱情宣言或简介或自我介绍,
    'content': 用户的内心独白
}
