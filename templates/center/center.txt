个人中心业务改动:
   粉丝：1000人     余额：1000爱豆   我关注的：30人
   我点赞的人：55人 查看过你：606人  附近的人：600人
   这些都去掉
   
   增加一个状态：征友进行中/找到意中人

基本资料上面的：个人资料 我看过谁 谁看过我 我关注的 保留
                关注我的           去掉
                添加：密码修改

个人中心center.html协议定义如下:

index.html中的“个人中心”
  获得html页面
    请求url:  GET url=/center
    请求参数: null
  获得数据
    请求url:  POST url=/center
    请求参数: null
    返回数据格式:
    {
        'code': 0,-1, //0成功, -1失败  失败时 data字段无效
        'msg': 'ok',或者 'reason'
        'data': {
                  'user': {},
                  'pic': {},
                  'statement': {},
                  'hobby':{},
                  'otherinfo':{},
                  'account': {'id':123, 'num': 1000}
                             //用户id    账户余额(1000豆)  account不为空
                }
    }
    //ps: 在使用data['pic'], data['statement'], data['hobby'], data['otherinfo']数据的时候，需要判断该该数据是否为空
    其中:
    user:
    {
        "salary": 0,//月薪 0=未填 1=2000以下 2=2000~5000 3=5000~10000
                    //     4=10000~20000 5=20000~50000 6=50000以上
        "aim": 0,   //交友目的 0=未填 1=交友 2=征婚 3=聊天
        "degree": 0,//0=保密 1=高中及以下 2=中专/大专 3=本科 4=研究生
                    //5=博士及博士后
        "weight": 50, //体重kg
        "nick_name": "",//昵称
        "curr_loc1": "",//现居省(直辖市)
        "curr_loc2": "",//现居市(直辖市的区)
        "age": 18,      //年龄
        "shengxiao": 0, //生肖属相 0=未填 1=鼠 2=牛 3=虎  4=兔  5=龙  6=蛇 
                        //                7=马 8=羊 9=猴 10=鸡 11=狗 12=猪
        "sex": 1,       //性别 1=男 2=女
        "height": 160,  //身高cm
        "ori_loc1": "", //籍贯省(直辖市)
        "ori_loc2": "", //籍贯市(直辖市的区)
        "mobile": "19913605616", //手机号
        "marriage": 0,  //婚姻情况 0=未填 1=单身 2=离异 3=丧偶
        "blood": 0,     //血型 0=未填 1=A 2=B 3=AB 4=O
        "xingzuo": 0,   //星座 0=未填 1=白羊 2=金牛 3=双子  4=巨蟹  5=狮子
                        //     6=处女 7=天秤 8=天蝎 9=射手 10=摩羯 11=水平
                        //    12=双鱼
        "nation": "汉", //民族
        "state": 0, //0=征友进行中 1=找到意中人
        "regist_time": "2018-03-12 19:17:49" //注册时间
    }
    pic: //该pic数据结构可能为{}
    {
        'id': 用户id,
        'count': 还可以上传几张图片, 最多能上传10张 0~9 第0张是头像，1~9是照片
        'arr': [url0, url1, url2, ......url9] url是图片的url,如果第i张url为空,则从它开始及其以后都没有图片了
    }
    statement://该statement数据结构可能为{}
    {
        'id': 用户id,
        'motto': 用户爱情宣言或简介或自我介绍,
        'content': 用户的内心独白
    }
    hobby://该hobby数据结构可能为{}
    {
        'id': 用户id,
        "arr_flag": 0,//是否有爱好 0=无(arr数组全为0) 1=有(arr数组有不为0的)
        "arr": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        //arr[0]: 爬山  //arr[1]: 摄影  //arr[2]: 音乐  //arr[3]: 电影
        //arr[4]: 旅游  //arr[5]: 游戏  //arr[6]: 健身  //arr[7]: 美食 
        //arr[8]: 跑步  //arr[9]: 逛街  //arr[10]:唱歌  //arr[11]:跳舞 
        //arr[12]:扑克  //arr[13]:麻将  //arr[14]:网购  //arr[15]:看书
        //arr[i] =0没有这个喜好 =1有这个喜好
    }
    otherinfo: //该otherinfo数据结构可能为{}
    {
        "id": 1,   //用户id
        "salary": 0,//月薪 0=未填 1=2000以下 2=2000~5000 3=5000~10000
                    //     4=10000~20000 5=20000~50000 6=50000以上
        "mobile": "15566667777", //手机
        "verify_m": 1, //手机验证     0=未验证 1=验证
        "public_m": 1, //手机信息公开 0=公开   1=非公开
        "qq": "",      //QQ
        "verify_q": 0, //QQ验证       同手机
        "public_q": 1, //QQ信息公开   同手机
        "email": "",   //email
        "verify_e": 0, //email验证    同手机
        "public_e": 1, //email公开    同手机
        "wx": "",      //微信
        "verify_w": 0, //微信验证     同手机
        "public_w": 1, //微信公开     同手机
        "house": 0,    //房子         0=未填 1=已购 2=未购 3=需要时购
        "work":0,      //职业类型     0=未填 1=学生 2=老师 3=工程师
                       //             4=商务人士 5=个体老板 6=白领人士
                       //             7=其他
        "car": 0       //车子         0=未填 1=已购 2=未购 3=需要时购
    }

上传图片: //选择图片时能预览    头像图片右上角也需要有删除小图标
    点击保存时 POST url: /upimg
    请求参数:
        图片参数&kind=1(kind=1上传头像 kind=2上传照片)
    返回值:
    {
     'code':0,   //0=成功 -1=失败
     'msg':'ok', //对code的解释
     'data': {'seq': 5} //seq 第几张图片 0=头像 1~9照片
    }

上传照片: //选择图片时能预览
    同上传图片

    当上传9张照片时，上传的图片按钮不再显示
    当从9张照片删除时，上传图片按钮显示

删除照片:
    点击删除时 有提示: 是否删除该图片 Y    N， 点击Y时:
    请求POST url: /delimg
    请求参数:
        seq=5(图片的序号)
    返回值:
    {
        'code': 0,
        'msg': 'ok'
    }
    code=0,   msg=删除成功
    code=-1,  msg=请先登录
    code=-2,  msg=请求参数不正确

编辑基本资料://性别不能改  其他属性没有填就显示“未填”
    请求POST url: /editbasic
    请求参数:
       nick_name=xxx&aim=xxx&age=xxx&marriage=xxx&xingzuo=xxx&shuxiang=xxx&
       blood=xxx&weight=xxx&height=xxx&degree=xxx&nation=xxx&cur1=xx&cur2=x&
       ori1=xx&ori2=xx&motto=xx&hobby=数组json(16个元素长度)
    nick_name:  <=12字符
    aim:  0~3      0=未填 1=交友 2=征婚 3=聊天
    age: >=18
    marriage: 0~3  0=未填 1=单身 2=离异 3=丧偶
    xingzuo: 0~12  0=未填 1~12依次顺排星座
    shuxiang: 0~12 0=未填1~12依次顺排生肖
    blood: 0~4     0=未填 1=A 2=B 3=AB 4=O
    weight: >=40
    height: >=150
    degree: 0~5    0=保密 1= <=高中 2=中专/大专 3=本科 4=研究生 5=博士及博士后
    nation: 0~56   0=保密 1~56百度民族顺序
    返回值:
    {
        'code': 0,//=0成功
        'msg': 'ok',
    }
    code:  0=成功
          -1=服务器错误
          -2=nick_name超过12个字符
          -3=aim参数错误 (在0,1,2,3之间取值)
          -4=age小于18岁 (必须大于18岁)
          -5=marriage参数错误  (在0,1,2,3之间取值)
          -6=xignzuo参数错误   (在0到12包括12之间取值)
          -7=shuxiang参数错误  (在0到12包括12之间取值)
          -8=blood   参数错误  (在0,1,2,3,4之间取值)
          -9=weight  参数错误  (必须>=40kg)
         -10=height  参数错误  (必须>=150cm)
         -11=degree  参数错误  (在0~6之间取值)
         -12=hobby   参数错误  (必须有16个0或1元素组成的数组)

内心独白编辑: 
    请求 POST url: /editstatement
    参数: content=xxxx   //content: 内心独白字符串
    返回值:
    {
        'code': 0, //0=成功 -1=失败 服务器错误
        'msg': 'ok'
    }

其他资料业务改动:
    性格特征 月薪 所在的两行改为一行：
    月薪   职业   购车  购房

ps:mobile wx qq email已经验证过的就不能编辑了
   判断是否验证过:
   otherinfo数据结构中:
   verify_m: 1 //mobile 验证过
   verify_w: 1 //wx     验证过
   verify_q: 1 //qq     验证过
   verify_e: 1 //email  验证过
   hint:在center get url=/center返回数据的时候,将上边字段嵌入对应的html位置上去即可
请求 POST  url=/editother
    请求参数:
    salary=&work=&car=&house=
    返回值:
    {
        'code': 0,
        'msg': 'ok'
    }
    code:  0 //编辑成功
          -1 //salary 只能取(0~6)
          -2 //work   只能取(0~7)
          -3 //car    只能取(0~3)
          -4 //house  只能取(0~3)

    手机号验证:
        点击手机号右侧的“验证”按钮，显示和找回密码的界面一样
        请求验证码: GET /verify&mobile=xxx
        返回值:
        {
            'code': 0,  //0=成功 -1=失败 此时token和time未定义
            'msg': 'ok', //reason
            'token': xxx,
            'time': xxx
        }
        提交验证码和手机号: POST /verify
        请求参数：{'code':xxx, 'token':xxx, 'time':xxx}
        返回值：
        {
            'code': 0,
            'msg': 'ok'
        }
        code: 标识这次手机验证状态
               0：成功
              -1：失败  msg:'验证码超时'
              -2：失败  msg:'验证码不正确'
              -3：失败  msg:'手机号不正确'
              -4：失败  msg:'非法请求(未登录用户)'
              -5：失败  msg:'提交参数不正确'
              -6：失败  msg:'服务器内部错误'
    微信和QQ验证:
        点击微信和qq右侧的“验证”按钮，扫描弹出的二维码，界面和wx qq登录一样
    邮箱验证:
        弹框，输入邮箱号，点击发送验证链接即可
        请求方法:  GET /verify_email?uid=123
                   uid: 用户的id
        返回值:   {
                    'code': 0,  //0=成功  -1=30秒内只能发送一次
                    'msg': 'ok' //  成功     30秒内只能发送一次
                  }
          
    一种联系方式验证完之后，“绑定”变为“已验证”
